<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/VVCMSAPI.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/VVCMSAPI</TokenIdentifier>
			<Abstract type="html">VVCMSAPI is used to authenticate and query a VolarVideo site for the current broadcasts (additional document types will be added over time).  The following outlines the squence of usage:</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/VVCMSAPI/vvCMSAPI</TokenIdentifier>
			<Abstract type="html">Factory method used to create a new VVCMSAPI singlton.</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>+ (VVCMSAPI *)vvCMSAPI</Declaration>
			
			
			<Anchor>//api/name/vvCMSAPI</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/setDelegate:error:</TokenIdentifier>
			<Abstract type="html">Set Delegate</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>- (void)setDelegate:(id&lt;VVCMSAPIDelegate&gt;)delegate error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>delegate</Name>
					<Abstract type="html">The delegate object that implements the handlers for the VVCMSAPIDelegate protocol</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">By-Reference error pointer for error handling</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDelegate:error:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate upon which the completion methods will be called.</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>@property (assign) id&lt;VVCMSAPIDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/delegate</TokenIdentifier>
			<Abstract type="html">The delegate upon which the completion methods will be called.</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>@property (assign) id&lt;VVCMSAPIDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSAPI/delegate</TokenIdentifier>
			<Abstract type="html">The delegate upon which the completion methods will be called.</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>@property (assign) id&lt;VVCMSAPIDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/setApiURL:</TokenIdentifier>
			<Abstract type="html">A string representing the domain for the current site and user.  nil will default to vcloud.volarvide.com.</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *apiURL</Declaration>
			
			
			<Anchor>//api/name/apiURL</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/apiURL</TokenIdentifier>
			<Abstract type="html">A string representing the domain for the current site and user.  nil will default to vcloud.volarvide.com.</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *apiURL</Declaration>
			
			
			<Anchor>//api/name/apiURL</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSAPI/apiURL</TokenIdentifier>
			<Abstract type="html">A string representing the domain for the current site and user.  nil will default to vcloud.volarvide.com.</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *apiURL</Declaration>
			
			
			<Anchor>//api/name/apiURL</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/authenticationRequestForDomain:username:andPassword:</TokenIdentifier>
			<Abstract type="html">Authenticates with username and password and initiates VVCMSAPI</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>- (void)authenticationRequestForDomain:(NSString *)url username:(NSString *)username andPassword:(NSString *)password</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The domain for API further API calls.</Abstract>
				</Parameter><Parameter>
					<Name>username</Name>
					<Abstract type="html">Username for authenticating. Pass nil for public access.</Abstract>
				</Parameter><Parameter>
					<Name>password</Name>
					<Abstract type="html">Password for authenticating. Pass nil for public access.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authenticationRequestForDomain:username:andPassword:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/requestBroadcastsWithStatus:page:resultsPerPage:</TokenIdentifier>
			<Abstract type="html">Request VVCMSBroadcast objects for the current domain, site, and user.</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>- (void)requestBroadcastsWithStatus:(VVCMSBroadcastStatus)status page:(int)page resultsPerPage:(int)items</Declaration>
			<Parameters>
				<Parameter>
					<Name>status</Name>
					<Abstract type="html">Used to filter results by the broadcast status.  One of the following VVCMSBroadcastsStatus values:

    VVCMSBroadcastStatusUnknown,
    VVCMSBroadcastStatusScheduled,
    VVCMSBroadcastStatusStreaming,
    VVCMSBroadcastStatusArchived,
    VVCMSBroadcastStatusAll</Abstract>
				</Parameter><Parameter>
					<Name>page</Name>
					<Abstract type="html">The pagenation page</Abstract>
				</Parameter><Parameter>
					<Name>items</Name>
					<Abstract type="html">The number of results per page (for pagenation)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/requestBroadcastsWithStatus:page:resultsPerPage:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/requestBroadcastsWithStatus:andSection_id:page:resultsPerPage:</TokenIdentifier>
			<Abstract type="html">Request VVCMSBroadcast objects in a specific section for the current domain, site, and user.</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>- (void)requestBroadcastsWithStatus:(VVCMSBroadcastStatus)status andSection_id:(int)section_id page:(int)page resultsPerPage:(int)items</Declaration>
			<Parameters>
				<Parameter>
					<Name>status</Name>
					<Abstract type="html">Used to filter results by the broadcast status.  One of the following VVCMSBroadcastsStatus values:

VVCMSBroadcastStatusUnknown,
VVCMSBroadcastStatusScheduled,
VVCMSBroadcastStatusStreaming,
VVCMSBroadcastStatusArchived,
VVCMSBroadcastStatusAll</Abstract>
				</Parameter><Parameter>
					<Name>section_id</Name>
					<Abstract type="html">Used to filter results by the site section.  Site sections are available in the requestSectionsPage:resultsPerPage: method.</Abstract>
				</Parameter><Parameter>
					<Name>page</Name>
					<Abstract type="html">The pagenation page</Abstract>
				</Parameter><Parameter>
					<Name>items</Name>
					<Abstract type="html">The number of results per page (for pagenation)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/requestBroadcastsWithStatus:andSection_id:page:resultsPerPage:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/requestSectionsPage:resultsPerPage:</TokenIdentifier>
			<Abstract type="html">Request an array of all the sections available for the current site</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>- (void)requestSectionsPage:(int)page resultsPerPage:(int)items</Declaration>
			<Parameters>
				<Parameter>
					<Name>page</Name>
					<Abstract type="html">The pagenation page</Abstract>
				</Parameter><Parameter>
					<Name>items</Name>
					<Abstract type="html">The number of results per page (for pagenation)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/requestSectionsPage:resultsPerPage:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/logout</TokenIdentifier>
			<Abstract type="html">End authenticated session</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>- (void)logout</Declaration>
			
			
			<Anchor>//api/name/logout</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/isReachable</TokenIdentifier>
			<Abstract type="html">Reachability status of VolarVideo CMS domain and site</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>- (BOOL)isReachable</Declaration>
			
			
			<Anchor>//api/name/isReachable</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/latestReachabilityResult</TokenIdentifier>
			<Abstract type="html">Last known reachability result</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>- (BOOL)latestReachabilityResult</Declaration>
			
			
			<Anchor>//api/name/latestReachabilityResult</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSAPI/siteName</TokenIdentifier>
			<Abstract type="html">Longform of sitename, useful if multiple sites are to be managed.</Abstract>
			<DeclaredIn>VVCMSAPI.h</DeclaredIn>			
			
			<Declaration>- (NSString *)siteName</Declaration>
			
			
			<Anchor>//api/name/siteName</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
	</File>
</Tokens>