<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/VVCMSBroadcast.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/VVCMSBroadcast</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
            
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setID:</TokenIdentifier>
			<Abstract type="html">VolarVideo broadcast ID number</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ID</Declaration>
			
			
			<Anchor>//api/name/ID</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/ID</TokenIdentifier>
			<Abstract type="html">VolarVideo broadcast ID number</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ID</Declaration>
			
			
			<Anchor>//api/name/ID</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/ID</TokenIdentifier>
			<Abstract type="html">VolarVideo broadcast ID number</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ID</Declaration>
			
			
			<Anchor>//api/name/ID</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setTitle:</TokenIdentifier>
			<Abstract type="html">Title of broadcast</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/title</TokenIdentifier>
			<Abstract type="html">Title of broadcast</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/title</TokenIdentifier>
			<Abstract type="html">Title of broadcast</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setDescription:</TokenIdentifier>
			<Abstract type="html">Description of broadcast</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *description</Declaration>
			
			
			<Anchor>//api/name/description</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/description</TokenIdentifier>
			<Abstract type="html">Description of broadcast</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *description</Declaration>
			
			
			<Anchor>//api/name/description</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/description</TokenIdentifier>
			<Abstract type="html">Description of broadcast</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *description</Declaration>
			
			
			<Anchor>//api/name/description</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setStatus:</TokenIdentifier>
			<Abstract type="html">Status of broadcast, one of the following VVCMSBroadcastsStatus values:</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) VVCMSBroadcastStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/status</TokenIdentifier>
			<Abstract type="html">Status of broadcast, one of the following VVCMSBroadcastsStatus values:</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) VVCMSBroadcastStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/status</TokenIdentifier>
			<Abstract type="html">Status of broadcast, one of the following VVCMSBroadcastsStatus values:</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) VVCMSBroadcastStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setThumbnailURL:</TokenIdentifier>
			<Abstract type="html">String representation of URL where a thumbnail version of the broadcast&apos;s Poster can be found.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *thumbnailURL</Declaration>
			
			
			<Anchor>//api/name/thumbnailURL</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/thumbnailURL</TokenIdentifier>
			<Abstract type="html">String representation of URL where a thumbnail version of the broadcast&apos;s Poster can be found.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *thumbnailURL</Declaration>
			
			
			<Anchor>//api/name/thumbnailURL</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/thumbnailURL</TokenIdentifier>
			<Abstract type="html">String representation of URL where a thumbnail version of the broadcast&apos;s Poster can be found.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *thumbnailURL</Declaration>
			
			
			<Anchor>//api/name/thumbnailURL</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setStartDate:</TokenIdentifier>
			<Abstract type="html">Date at which the broadcast is (was) scheduled to start.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *startDate</Declaration>
			
			
			<Anchor>//api/name/startDate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/startDate</TokenIdentifier>
			<Abstract type="html">Date at which the broadcast is (was) scheduled to start.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *startDate</Declaration>
			
			
			<Anchor>//api/name/startDate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/startDate</TokenIdentifier>
			<Abstract type="html">Date at which the broadcast is (was) scheduled to start.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *startDate</Declaration>
			
			
			<Anchor>//api/name/startDate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setEditDate:</TokenIdentifier>
			<Abstract type="html">Last date at which the broadcast or its meta data was changed.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *editDate</Declaration>
			
			
			<Anchor>//api/name/editDate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/editDate</TokenIdentifier>
			<Abstract type="html">Last date at which the broadcast or its meta data was changed.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *editDate</Declaration>
			
			
			<Anchor>//api/name/editDate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/editDate</TokenIdentifier>
			<Abstract type="html">Last date at which the broadcast or its meta data was changed.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *editDate</Declaration>
			
			
			<Anchor>//api/name/editDate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setRating:</TokenIdentifier>
			<Abstract type="html">Average rating of this broadcast</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) double rating</Declaration>
			
			
			<Anchor>//api/name/rating</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/rating</TokenIdentifier>
			<Abstract type="html">Average rating of this broadcast</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) double rating</Declaration>
			
			
			<Anchor>//api/name/rating</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/rating</TokenIdentifier>
			<Abstract type="html">Average rating of this broadcast</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) double rating</Declaration>
			
			
			<Anchor>//api/name/rating</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setAudioOnly:</TokenIdentifier>
			<Abstract type="html">YES if broadcast is only available as an audio stream.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL audioOnly</Declaration>
			
			
			<Anchor>//api/name/audioOnly</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/audioOnly</TokenIdentifier>
			<Abstract type="html">YES if broadcast is only available as an audio stream.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL audioOnly</Declaration>
			
			
			<Anchor>//api/name/audioOnly</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/audioOnly</TokenIdentifier>
			<Abstract type="html">YES if broadcast is only available as an audio stream.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL audioOnly</Declaration>
			
			
			<Anchor>//api/name/audioOnly</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setProgress:</TokenIdentifier>
			<Abstract type="html">The last known viewing position in the broadcast for the currently authenticated user.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) double progress</Declaration>
			
			
			<Anchor>//api/name/progress</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/progress</TokenIdentifier>
			<Abstract type="html">The last known viewing position in the broadcast for the currently authenticated user.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) double progress</Declaration>
			
			
			<Anchor>//api/name/progress</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/progress</TokenIdentifier>
			<Abstract type="html">The last known viewing position in the broadcast for the currently authenticated user.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) double progress</Declaration>
			
			
			<Anchor>//api/name/progress</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setAuthorName:</TokenIdentifier>
			<Abstract type="html">The content creator / owner.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *authorName</Declaration>
			
			
			<Anchor>//api/name/authorName</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/authorName</TokenIdentifier>
			<Abstract type="html">The content creator / owner.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *authorName</Declaration>
			
			
			<Anchor>//api/name/authorName</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/authorName</TokenIdentifier>
			<Abstract type="html">The content creator / owner.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *authorName</Declaration>
			
			
			<Anchor>//api/name/authorName</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setIsStreaming:</TokenIdentifier>
			<Abstract type="html">YES if the broadcast is live streaming.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isStreaming</Declaration>
			
			
			<Anchor>//api/name/isStreaming</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/isStreaming</TokenIdentifier>
			<Abstract type="html">YES if the broadcast is live streaming.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isStreaming</Declaration>
			
			
			<Anchor>//api/name/isStreaming</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/isStreaming</TokenIdentifier>
			<Abstract type="html">YES if the broadcast is live streaming.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isStreaming</Declaration>
			
			
			<Anchor>//api/name/isStreaming</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/setVmapURL:</TokenIdentifier>
			<Abstract type="html">String representing URL of VolarExtended VMAP of broadcast.  Pass this string to [VVMoviePlayerViewController initWithExtendedVMAPURIString:], [VVMoviePlayerViewController initAndStartWithExtendedVMAPURIString:], [VVMoviePlayerController initWithExtendedVMAPURIString:], or [VVMoviePlayerController initAndStartWithExtendedVMAPURIString:] to initialize a VolarVideo broadcast for playback as a movie.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *vmapURL</Declaration>
			
			
			<Anchor>//api/name/vmapURL</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VVCMSBroadcast/vmapURL</TokenIdentifier>
			<Abstract type="html">String representing URL of VolarExtended VMAP of broadcast.  Pass this string to [VVMoviePlayerViewController initWithExtendedVMAPURIString:], [VVMoviePlayerViewController initAndStartWithExtendedVMAPURIString:], [VVMoviePlayerController initWithExtendedVMAPURIString:], or [VVMoviePlayerController initAndStartWithExtendedVMAPURIString:] to initialize a VolarVideo broadcast for playback as a movie.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *vmapURL</Declaration>
			
			
			<Anchor>//api/name/vmapURL</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VVCMSBroadcast/vmapURL</TokenIdentifier>
			<Abstract type="html">String representing URL of VolarExtended VMAP of broadcast.  Pass this string to [VVMoviePlayerViewController initWithExtendedVMAPURIString:], [VVMoviePlayerViewController initAndStartWithExtendedVMAPURIString:], [VVMoviePlayerController initWithExtendedVMAPURIString:], or [VVMoviePlayerController initAndStartWithExtendedVMAPURIString:] to initialize a VolarVideo broadcast for playback as a movie.</Abstract>
			<DeclaredIn>VVCMSBroadcast.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *vmapURL</Declaration>
			
			
			<Anchor>//api/name/vmapURL</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
        
	</File>
</Tokens>